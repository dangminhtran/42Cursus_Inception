version: '3.8'

services:
  mariadb:
    container_name: mariadb
    build: 
        context: requirements/mariadb
        dockerfile: Dockerfile
        env_file: .env
    networks :
      - inception
    volumes:
      - mariadb:/var/lib/mysql
    restart: always
    expose:
      - "3306"
    healthcheck:
      test: ["CMD", "nc", "-zv", "mariadb", "3306"]
      interval: 1s
      timeout: 5s
      retries: 10

  nginx:
    container_name: nginx
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    depends_on:
      - wordpress
    build: 
    context: requirements/nginx
    dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443"
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost"]
      interval: 1s
      timeout: 5s
      retries: 10
      
  wordpress:
    container_name: wordpress
    env_file: .env
    volumes:
      - wordpress:/var/www/wordpress
    networks:
      - inception
    build: 
    context: requirements/wordpress
    dockerfile: Dockerfile
    depends_on:
      - mariadb
    restart: on-failure
    expose: 
      - "9000"
  
  volumes:
    wordpress:
      driver: local
      driver_opts:
      type: 'none'
      o: 'bind
      device: '/home/dangtran/data/wordpress'
    mariadb:
      driver: local
      driver_opts:
      type: 'none' 
      o: 'bind'										 # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
      device: '/home/dangtran/data/mariadb'

  networks:
    inception:
    driver: bridge


# healthcheck: utile ?